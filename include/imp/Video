// -*- C++ -*-
#ifndef __IMP_VIDEO__38697988
#define __IMP_VIDEO__38697988

#include "Prelude"

namespace imp {
  struct video_error : std::runtime_error {
      using std::runtime_error::runtime_error;
  };

  enum struct Fullscreen {
      none, // Windowed
      noborder, // Noborder fullscreen window
      exclusive // Exclusive fullscreen
  };

  enum struct OpenGLVer {
      gl14,
      gl33
  };

  struct VideoMode {
      VideoMode(const char * const dn = "", int w = 0, int h = 0,
          int colorbits = 32, int depthbits = 24, bool VSync = false,
          const Fullscreen fs = Fullscreen::none) {
          displayname = dn;
          width = w;
          height = h;
          buffer_size = colorbits;
          depth_size = depthbits;
          fullscreen = fs;
          vsync = VSync;
      }
      imp::String displayname;
      int width;
      int height;
      int buffer_size { 32 };
      int depth_size { 24 };
      Fullscreen fullscreen { Fullscreen::none };
      bool vsync { false };
  };

  struct IVideo {
      virtual ~IVideo() {}
      virtual void set_mode(const VideoMode&) = 0;
      virtual VideoMode current_mode() = 0;
      virtual ArrayView<VideoMode> modes(int monitor_index) = 0;
      virtual int displays() = 0;
      virtual void swap_window() = 0;
      virtual void grab(bool) = 0;
      virtual void poll_events() = 0;

      bool is_windowed()
      { return current_mode().fullscreen == Fullscreen::none; }
  };

  extern IVideo* Video;
}

#endif //__IMP_VIDEO__38697988
